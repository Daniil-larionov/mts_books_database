with t1 as (SELECT u1.user_id as userid,
       u1.sex,
       COUNT(inter.item_id) as num_of_interactions,
       CASE 
           WHEN (substring(u1.age from '^[0-9]+')::integer BETWEEN 18 AND 24 OR substring(u1.age from '_([0-9]+)$')::integer BETWEEN 18 AND 24) THEN '18_24'
           WHEN (substring(u1.age from '^[0-9]+')::integer BETWEEN 25 AND 34 OR substring(u1.age from '_([0-9]+)$')::integer BETWEEN 25 AND 34) THEN '25_34'
           WHEN (substring(u1.age from '^[0-9]+')::integer BETWEEN 35 AND 44 OR substring(u1.age from '_([0-9]+)$')::integer BETWEEN 35 AND 44) THEN '35_44'
           WHEN (substring(u1.age from '^[0-9]+')::integer BETWEEN 45 AND 54 OR substring(u1.age from '_([0-9]+)$')::integer BETWEEN 45 AND 54) THEN '45_54'
           WHEN (substring(u1.age from '^[0-9]+')::integer BETWEEN 55 AND 64 OR substring(u1.age from '_([0-9]+)$')::integer BETWEEN 55 AND 64) THEN '55_64'
           WHEN (substring(u1.age from '^[0-9]+')::integer >= 65 OR substring(u1.age from '_([0-9]+)$')::integer >= 65) THEN '65_inf'
           ELSE 'Unknown'
       END as age_range
FROM users as u1
JOIN interactions inter ON u1.user_id = inter.user_id
JOIN items i ON i.id = inter.item_id  
GROUP BY u1.user_id, u1.sex, age_range
order by u1.user_id desc
limit 1000)
select t1.age_range,
t1.sex,
count(distinct t1.userid)
from t1 
group by t1.age_range, t1.sex
